package nowcoder.fairy;

import java.util.ArrayList;

/**
 * 丑数
 * Author:gagayu
 * Created:2019/3/25
 */

/*
一个丑数是由另一个丑数*2或*3或*5得到的。

1.为什么分三个队列？
丑数数组里的数一定是有序的，因为我们是从丑数数组里的数乘以2,3,5选出的最小数，一定比以前未乘以2,3,5大，
同时对于三个队列内部，按先后顺序乘以2,3,5分别放入，所以同一个队列内部也是有序的；
2.为什么比较三个队列头部最小的数放入丑数数组？
因为三个队列是有序的，所以取出三个头中最小的，等同于找到了三个队列所有数中最小的。
实现思路：
我们没有必要维护三个队列，只需要记录三个指针显示到达哪一步；“|”表示指针,arr表示丑数数组；
（1）1
|2
|3
|5
目前指针指向0,0,0，队列头arr[0] * 2 = 2,  arr[0] * 3 = 3,  arr[0] * 5 = 5
（2）1 2
2 |4
|3 6
|5 10
目前指针指向1,0,0，队列头arr[1] * 2 = 4,  arr[0] * 3 = 3, arr[0] * 5 = 5
（3）1 2 3
2| 4 6
3 |6 9
|5 10 15
目前指针指向1,1,0，队列头arr[1] * 2 = 4,  arr[1] * 3 = 6, arr[0] * 5 = 5
………………
 */
public class Test10 {
//        private final int[] ugly=new int[]{2,3,5};
//    public int GetUglyNumber_Solution(int index) {
//
//        if(index==0){return 0;}
//        //存储要排好序的丑数
//        int a[]=new int[index];
//        a[0]=1;
//        //记录用于乘2的比较数在a中的位置
//        int[] p=new int[]{0,0,0};
//        //用于存储下次可能会放入a[]中的数字
//        int num[]=new int[]{2,3,5};
//        int curr=1;
//        while(curr<index){
//            int min=findMin(ugly);
//            if(a[curr-1]<num[min]){
//                a[curr++]=num[min];
//            }
//            p[min]+=1;
//            num[min]=a[p[min]]*ugly[min];
//        }
//
//
//        return a[index-1];
//    }
//
//    public int findMin(int[] num){
//        int min=Math.min(Math.min(num[0],num[1]),num[2]);
//        return min==num[0] ? 0: min==num[1] ? 1:2;
//    }
    public int GetUglyNumber_Solution(int index) {

        if (index <=0) { return 0;}

        //p2,p3,p5是三个队列指针，newUglyNumber是每次选出来的最小的丑数，加入到list中
        int p2=0,p3=0,p5=0;
        int newUglyNumber=1;
        ArrayList<Integer> arrayList=new ArrayList<>();
        arrayList.add(newUglyNumber);
        while(arrayList.size()<index){
            int tmp2=  arrayList.get(p2)*2;
            int tmp3= arrayList.get(p3)*3;
            int tmp5= arrayList.get(p5)*5;
            //选出三个队列中最小的数
            int min=Math.min(tmp2,Math.min(tmp3,tmp5));
            //选出那个队列中的数，这个队列下标就加1，指针前进一个数字
            arrayList.add(min);
            if(min==tmp2){p2++;}
            if(min==tmp3){p3++;}
            if(min==tmp5){p5++;}



        }
   return arrayList.get(index-1);
    }



    public static void main(String[] args) {
        Test10 test10 = new Test10();
        int ugly = test10.GetUglyNumber_Solution(6);
        System.out.println(ugly);
    }
}
