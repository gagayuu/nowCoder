package nowcoder.fairy.tree;

import java.util.ArrayList;
import java.util.Stack;

/**
 * 按之字型顺序打印二叉树
 * Author:gagayu
 * Created:2019/4/18
 */
public class Test38 {

    public static ArrayList<ArrayList<Integer>> Print(TreeNode pRoot) {
        ArrayList<ArrayList<Integer>> arrayList = new ArrayList<>();
        Stack<TreeNode> stack1 = new Stack<>();
        Stack<TreeNode> stack2 = new Stack<>();
        int level = 0;
        if (pRoot == null) {
            return arrayList;
        }
        stack1.push(pRoot);
        while (!stack1.empty() || !stack2.empty()) {
            if (level % 2 == 0) {
                ArrayList<Integer> arrayList1 = new ArrayList<>();
                while (!stack1.empty()) {

                    TreeNode tmp = stack1.pop();
                    arrayList1.add(tmp.val);
                    System.out.print(tmp.val + " ");
                    if (tmp.left != null) {
                        stack2.push(tmp.left);
                    }
                    if (tmp.right != null) {
                        stack2.push(tmp.right);
                    }

                }
                if (arrayList1.size() != 0) {
                    arrayList.add(arrayList1);
                   level++;
                }
                System.out.println();
            }

            else{
                ArrayList<Integer> arrayList1 = new ArrayList<>();
                while (!stack2.empty()) {
                    TreeNode tmp = stack2.pop();
                    arrayList1.add(tmp.val);
                    System.out.print(tmp.val + " ");
                    if (tmp.right != null) {
                        stack1.push(tmp.right);
                    }
                    if (tmp.left != null) {
                        stack1.push(tmp.left);
                    }
                }
                if (arrayList1.size() != 0) {
                    arrayList.add(arrayList1);
                   level++;
                }
                System.out.println();
            }



        }


        return arrayList;
    }

    public static void main(String[] args) {
        TreeNode n1 = new TreeNode(8);
        TreeNode n2 = new TreeNode(6);
        TreeNode n3 = new TreeNode(10);
        TreeNode n4 = new TreeNode(5);
        TreeNode n5 = new TreeNode(7);
        TreeNode n6 = new TreeNode(9);
        TreeNode n7 = new TreeNode(11);
        n1.left = n2;
        n1.right = n3;
        n2.left = n4;
        n2.right = n5;
        n3.left = n6;
        n3.right = n7;
        Print(n1);
    }


}
