import java.util.*;

public class AntiOrder {
    public int count(int[] A, int n) {
     if(A==null || n==0){
         return 0;
     }
     return    countReverseRec(A,0,n-1);
    }
    public int  countReverseRec(int[] A,int left,int right){
        if(left>=right){
            return 0;
        }
        int mid=(left+right)>>1;
        return  countReverseRec(A,left,mid)+countReverseRec(A,mid+1,right)+merge(A,left,mid,right);
    }
    public int merge(int [] A,int left,int mid,int right){
        int i=left;
        int j=mid+1;
        int k=0;
        int count=0;
        int[] temp=new int[right-left+1];
        while(i<=mid &&j<=right){
            if(A[i]<=A[j]){
                temp[k++]=A[i++];
            }else{
                count+=mid-i+1;
                temp[k++]=A[j++];
            }
        }
        while(i<=mid){
            temp[k++]=A[i++];
        }
        while(j<=right){
            temp[k++]=A[j++];
        }
        for(int t=0;t<temp.length;t++){
            A[left++]=temp[t];
        }
        return count;
    }
}
