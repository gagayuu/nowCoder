题目描述
原理：ip地址的每段可以看成是一个0-255的整数，把每段拆分成一个二进制形式组合起来，然后把这个二进制数转变成
一个长整数。
举例：一个ip地址为10.0.3.193
每段数字             相对应的二进制数
10                   00001010
0                    00000000
3                    00000011
193                  11000001
组合起来即为：00001010 00000000 00000011 11000001,转换为10进制数就是：167773121，即该IP地址转换后的数字就是它了。的每段可以看成是一个0-255的整数，需要对IP地址进行校验

输入描述:
输入 
1 输入IP地址
2 输入10进制型的IP地址

输出描述:
输出
1 输出转换成10进制的IP地址
2 输出转换后的IP地址

示例1
输入
10.0.3.193
167969729
输出
167773121
10.3.3.193

import java.util.*;
public class Main{
    public static void main(String [] args){
        Scanner sc=new Scanner(System.in);
        while(sc.hasNext()){
            String ip=sc.nextLine();
            String num=sc.nextLine();
            ipToNum(ip);
            numToIp(num);
        }
    }
    public static void ipToNum(String ip){
        String[] ips=ip.split("\\.");
        StringBuilder sb=new StringBuilder();
        for(int i=0;i<4;i++){
            int bit=(int)Math.pow(2,8);
            int num=Integer.parseInt(ips[i]);
            String temp=Integer.toBinaryString(num | bit);
            sb.append(temp.substring(temp.length()-8,temp.length()));
        }
        long res=0;
        for(int i=0;i<32;i++){
            if(sb.charAt(i)=='1'){
                res+=(long)Math.pow(2,31-i);
            }
        }
        System.out.println(res);
    }
    public static void numToIp(String num){
         long value=Long.parseLong(num);
         long bit=(long)Math.pow(2,32);
         String str=Long.toBinaryString(value | bit);
         str=str.substring(str.length()-32,str.length());
         String[] ips=new String[4];
         StringBuilder sb=new StringBuilder();
         for(int i=0;i<4;i++){
             int temp=0;
             ips[i]=str.substring(i*8,i*8+8);
             for(int j=0;j<8;j++){
                 if(ips[i].charAt(j)=='1'){
                     temp+=(int)Math.pow(2,7-j);
                 }
             }
             if(i<3){
                 sb.append(temp+".");
             }else{
                 sb.append(temp);
             }
         }
        System.out.println(sb.toString());
    }
}
