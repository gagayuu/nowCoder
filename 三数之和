/*
给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？找出所有满足条件且不重复的三元组。

注意：答案中不可以包含重复的三元组。

例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，

满足要求的三元组集合为：
[
  [-1, 0, 1],
  [-1, -1, 2]
]
*/

class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        
        List<List<Integer>> res=new ArrayList<>();
        HashSet<List<Integer>> hs=new HashSet<>();
        if(nums.length<3){
            return res;
        }
        Arrays.sort(nums);
        for(int i=0;i<nums.length-2;i++){
              if(nums[i]>0){
                break;
            }
            int low=i+1;
            int high=nums.length-1;
            while(low<high){
                if(nums[low]+nums[i]+nums[high]==0){
                    if(!hs.contains(Arrays.asList(nums[i],nums[low],nums[high]))){
                        hs.add(Arrays.asList(nums[i],nums[low],nums[high]));
                        res.add(Arrays.asList(nums[i],nums[low],nums[high]));
                    }
                    while(low<high && nums[low]==nums[low+1]){low++;}
                    while(low<high && nums[high]==nums[high-1]){high--;}
                    
                    low++;
                    high--;
                }else if(nums[low]+nums[i]+nums[high] > 0){
                    high--;
                }else{
                    low++;
                }
             }
           }
            return res;
        }
    }
