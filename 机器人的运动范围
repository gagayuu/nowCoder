package nowcoder.fairy.arithmetic;

/**
 * Author:gagayu
 * Created:2019/4/29
 */
public class Test0429 {
    public int movingCount(int threshold, int rows, int cols) {
        //定义一个数组记录是否已经走过
        int[][] flag = new int[rows][cols];
        return moving(threshold, rows, cols, 0, 0, flag);

    }

    private int moving(int threshold, int rows, int cols, int i, int j, int[][] flag) {
        if (i < 0 || i >= rows || j < 0 || j >= cols||sum(i)+sum(j)>threshold||flag[i][j]==1) {
            return 0;
        }
        flag[i][j]=1;
        return moving(threshold,rows,cols,i-1,j,flag)+
                moving(threshold,rows,cols,i+1,j,flag)+
                moving(threshold,rows,cols,i,j-1,flag)+
                moving(threshold,rows,cols,i,j+1,flag)+
                1;
    }

    private int sum(int i) {
        int sum=0;
        do{
            sum+=i%10;
        }while((i=i/10)>0);
        return sum;
    }
}
