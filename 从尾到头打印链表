
/*
    public class ListNode {
        int val;
        ListNode next = null;

        ListNode(int val) {
            this.val = val;
        }
    }
*/

//输入一个链表，按链表值从尾到头的顺序返回一个ArrayList。

import java.util.ArrayList;
import java.util.Stack;
public class Solution {
    public ArrayList<Integer> printListFromTailToHead(ListNode listNode) {


        Stack<Integer> stack = new Stack<>();
        ArrayList<Integer> arrayList = new ArrayList<>();
        
        ListNode cur=listNode;
        while(cur!=null){
            stack.push(cur.val);
           cur=cur.next;
            
        }

        while(!stack.empty()){
            arrayList.add(stack.pop());
        }
        
        return arrayList;
    }
}
